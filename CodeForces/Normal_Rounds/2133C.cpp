// This file was generated by Clank
#include<bits/stdc++.h>
#define st first
#define nd second
#define all(x) x.begin(), x.end()
#define BOOST cin.tie(NULL); ios_base::sync_with_stdio(false);
 
// #define int ll
typedef long long ll;

using namespace std;
template <typename T> struct tag:reference_wrapper <T>{ using reference_wrapper <T>::reference_wrapper; };
template <typename T1, typename T2> static inline tag <ostream> operator<<(tag <ostream> os, pair<T1, T2> const& p){ return os.get()<<"{"<<p.first<<", "<<p.second<<"}", os;}
template <typename Other> static inline tag <ostream> operator<<(tag <ostream> os, Other const& o){ os.get()<<o; return os; }
template <typename T> static inline tag <ostream> operator <<(tag <ostream> os, vector <T> const& v){ os.get()<<"["; for (int i=0; i<v.size(); i++) if (i!=v.size()-1) os.get()<<v[i]<<", "; else os.get()<<v[i]; return os.get()<<"]", os; }
template <typename T> static inline tag <ostream> operator <<(tag <ostream> os, set <T> const& s){ vector <T> v; for (auto i: s) v.push_back(i); os.get()<<"["; for (int i=0; i<v.size(); i++) if (i!=v.size()-1) os.get()<<v[i]<<", "; else os.get()<<v[i]; return os.get()<<"]", os; }

void final_ans(vector<int> &v){
    cout << "! " << v.size();
    for(int i : v){
        cout << " " << i;
    }
    cout << "\n";
    cout.flush();
}

int ask(vector<int> &v, int x){
    cout << "? " << x << " " << v.size();
    for(int i : v){
        cout << " " << i;
    }
    cout << "\n";
    cout.flush();

    int ans; cin >> ans;
    return ans;
}


void solve(){
    int n; cin >> n;
    vector<int> va(n);
    for(int i = 1; i <= n; i++) va[i - 1] = i;
    
    vector<pair<int,int>> lopa(n);
    for(int i = 0; i < n; i++){
        lopa[i] = {ask(va, i + 1), i + 1};
    }
    sort(all(lopa));

    vector<int> ansv;
    ansv.push_back(lopa[n - 1].nd);
    lopa.pop_back();
    for(int i = n - 2; i >= 0; i--){
        vector<int> tmpv = {ansv.back(), lopa.back().nd};
        if(ask(tmpv, ansv.back()) == 2){
            ansv.push_back(lopa.back().nd);
        }
        lopa.pop_back();
    }
    final_ans(ansv);
}

 
int32_t main(){
    BOOST;
 
    int q = 1; cin >> q;
    while(q--){
        solve();
    }
    return 0;
}
