// This file was generated by Clank
#include<bits/stdc++.h>
#define st first
#define nd second
#define all(x) x.begin(), x.end()
#define BOOST cin.tie(NULL); ios_base::sync_with_stdio(false);
 
// #define int ll
typedef long long ll;

using namespace std;
template <typename T> struct tag:reference_wrapper <T>{ using reference_wrapper <T>::reference_wrapper; };
template <typename T1, typename T2> static inline tag <ostream> operator<<(tag <ostream> os, pair<T1, T2> const& p){ return os.get()<<"{"<<p.first<<", "<<p.second<<"}", os;}
template <typename Other> static inline tag <ostream> operator<<(tag <ostream> os, Other const& o){ os.get()<<o; return os; }
template <typename T> static inline tag <ostream> operator <<(tag <ostream> os, vector <T> const& v){ os.get()<<"["; for (int i=0; i<v.size(); i++) if (i!=v.size()-1) os.get()<<v[i]<<", "; else os.get()<<v[i]; return os.get()<<"]", os; }
template <typename T> static inline tag <ostream> operator <<(tag <ostream> os, set <T> const& s){ vector <T> v; for (auto i: s) v.push_back(i); os.get()<<"["; for (int i=0; i<v.size(); i++) if (i!=v.size()-1) os.get()<<v[i]<<", "; else os.get()<<v[i]; return os.get()<<"]", os; }

int ask(vector<int> &idxs){
    cout << "? " << idxs.size();
    for(int i : idxs){
        cout << " " << i;
    }
    cout << "\n";
    cout.flush();
    
    int ans;
    cin >> ans;
    return ans;
}

void ans(vector<int> &idxs){
    cout << "!";
    for(int i : idxs){
        cout << " " << i;
    }
    cout << "\n";
    cout.flush();
}

void solve(){
    int n; 
    cin >> n;
    vector<int> a(2 * n, -1);
    vector<int> fo(n + 1, -1);
    vector<int> s;
    vector<int> s2;
    s.push_back(1);
    int tmp;
    for(int i = 2; i <= 2 * n; i++){
        s.push_back(i);
        tmp = ask(s);
        if(tmp != 0){
            a[i - 1] = tmp;
            fo[tmp] = i;
            s2.push_back(i);
            s.pop_back();
        }
    }
    for(int i = 1; i <= 2 * n; i++){
        if(a[i - 1] == -1){
            s2.push_back(i);
            a[i - 1] = ask(s2);
            s2.pop_back();
        }
    }

    ans(a);
}

 
int32_t main(){
    // BOOST;
 
    int q = 1; cin >> q;
    while(q--){
        solve();
    }
    return 0;
}
